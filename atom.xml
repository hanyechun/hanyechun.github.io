<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hyc&#39;s blog</title>
  
  <subtitle>write less, do more</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hanyechun.github.io/"/>
  <updated>2022-09-26T07:17:18.174Z</updated>
  <id>https://hanyechun.github.io/</id>
  
  <author>
    <name>叶寒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 12 蓝牙权限变更</title>
    <link href="https://hanyechun.github.io/2022/09/26/Android-12-%E8%93%9D%E7%89%99%E6%9D%83%E9%99%90%E5%8F%98%E6%9B%B4/"/>
    <id>https://hanyechun.github.io/2022/09/26/Android-12-蓝牙权限变更/</id>
    <published>2022-09-26T07:02:27.000Z</published>
    <updated>2022-09-26T07:17:18.174Z</updated>
    
    <content type="html"><![CDATA[<h4 id="运行崩溃："><a href="#运行崩溃：" class="headerlink" title="运行崩溃："></a>运行崩溃：</h4><blockquote><p>Caused by: java.lang.SecurityException: Need android.permission.BLUETOOTH_CONNECT<br>permission for android.content.AttributionSource@db46d647: enable 37 at<br>android.os.Parcel.createExceptionOrNull(Parcel.java:2425) 38 at<br>android.os.Parcel.createException(Parcel.java:2409) 39 at<br>android.os.Parcel.readException(Parcel.java:2392) 40 at<br>android.os.Parcel.readException(Parcel.java:2334) 41 at<br>android.bluetooth.IBluetoothManagerStubProxy.enable(IBluetoothManager.java:611) 42 at<br>android.bluetooth.BluetoothAdapter.enable(BluetoothAdapter.java:1217)</p></blockquote><h4 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h4><p>在target到Android12之后，查找蓝牙设备需要添加 BLUETOOTH_SCAN 权限，与匹配的蓝牙设备传输数据需要获取BLUETOOTH_CONNECT 权限。</p><p>参考<a href="https://developer.android.com/guide/topics/connectivity/bluetooth/permissions" target="_blank" rel="noopener">官方文档</a>权限声明：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;manifest&gt;</span><br><span class="line">    &lt;!-- Request legacy Bluetooth permissions on older devices. --&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot;</span><br><span class="line">                     android:maxSdkVersion=&quot;30&quot; /&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot;</span><br><span class="line">                     android:maxSdkVersion=&quot;30&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Needed only if your app looks for Bluetooth devices.</span><br><span class="line">         If your app doesn&apos;t use Bluetooth scan results to derive physical</span><br><span class="line">         location information, you can strongly assert that your app</span><br><span class="line">         doesn&apos;t derive physical location. --&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_SCAN&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Needed only if your app makes the device discoverable to Bluetooth</span><br><span class="line">         devices. --&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADVERTISE&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Needed only if your app communicates with already-paired Bluetooth</span><br><span class="line">         devices. --&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Needed only if your app uses Bluetooth scan results to derive physical location. --&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot; /&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><p>在查找和匹配蓝牙设备之前，先动态申请 BLUETOOTH_SCAN 权限以及BLUETOOTH_CONNECT 权限。</p><h4 id="适配-Android12-的一些坑"><a href="#适配-Android12-的一些坑" class="headerlink" title="适配 Android12 的一些坑"></a><a href="https://mp.weixin.qq.com/s/CEsb7BmhNJ8mbqX4FjVS1A" target="_blank" rel="noopener">适配 Android12 的一些坑</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;运行崩溃：&quot;&gt;&lt;a href=&quot;#运行崩溃：&quot; class=&quot;headerlink&quot; title=&quot;运行崩溃：&quot;&gt;&lt;/a&gt;运行崩溃：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Caused by: java.lang.SecurityException: Need android.permission.BLUETOOTH_CONNECT&lt;br&gt;permission for android.content.AttributionSource@db46d647: enable 37 at&lt;br&gt;android.os.Parcel.createExceptionOrNull(Parcel.java:2425) 38 at&lt;br&gt;android.os.Parcel.createException(Parcel.java:2409) 39 at&lt;br&gt;android.os.Parcel.readException(Parcel.java:2392) 40 at&lt;br&gt;android.os.Parcel.readException(Parcel.java:2334) 41 at&lt;br&gt;android.bluetooth.IBluetoothManagerStubProxy.enable(IBluetoothManager.java:611) 42 at&lt;br&gt;android.bluetooth.BluetoothAdapter.enable(BluetoothAdapter.java:1217)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h4&gt;&lt;p&gt;在target到Android12之后，查找蓝牙设备需要添加 BLUETOOTH_SCAN 权限，与匹配的蓝牙设备传输数据需要获取BLUETOOTH_CONNECT 权限。&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;https://developer.android.com/guide/topics/connectivity/bluetooth/permissions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;权限声明：&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android Room升级和迁移</title>
    <link href="https://hanyechun.github.io/2022/09/03/Android-Room%E5%8D%87%E7%BA%A7%E5%92%8C%E8%BF%81%E7%A7%BB/"/>
    <id>https://hanyechun.github.io/2022/09/03/Android-Room升级和迁移/</id>
    <published>2022-09-03T05:13:44.000Z</published>
    <updated>2022-09-03T05:35:56.400Z</updated>
    
    <content type="html"><![CDATA[<h4 id="升级version"><a href="#升级version" class="headerlink" title="升级version"></a>升级version</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Database class definition declaring version 3.</span><br><span class="line">@Database(version = 3)</span><br><span class="line">abstract class AppDatabase : RoomDatabase() &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="提供Migration"><a href="#提供Migration" class="headerlink" title="提供Migration"></a>提供Migration</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Migration path definition from version 2 to version 3.</span><br><span class="line">val MIGRATION_2_3 = object : Migration(2, 3) &#123;</span><br><span class="line">    override fun migrate(database: SupportSQLiteDatabase) &#123;</span><br><span class="line"></span><br><span class="line">        database.execSQL(&quot;CREATE TABLE IF NOT EXISTS `$&#123;TABLE_NAME&#125;` (`jar_ids` TEXT NOT NULL, `time` INTEGER NOT NULL, `record_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `id` INTEGER NOT NULL, `cycles` TEXT NOT NULL, `inflation_time` TEXT NOT NULL, `cycles_vacuum` TEXT NOT NULL, `final_vacuum` TEXT NOT NULL, `final_vacuum_hold` TEXT NOT NULL, `create_time` TEXT NOT NULL)&quot;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="如何写migration迁移sql语句"><a href="#如何写migration迁移sql语句" class="headerlink" title="如何写migration迁移sql语句"></a>如何写migration迁移sql语句</h5><p>其实有一个取巧的方式，当在Table.class增加完字段或者新增完Entity，找到 <code>exportSchame</code>导出目录下的3.json。你会发现sql语句已经被生成出来了。</p><a id="more"></a><h5 id="复杂的migration"><a href="#复杂的migration" class="headerlink" title="复杂的migration"></a>复杂的migration</h5><ul><li>创建一个新的临时表，</li><li>将数据从users表复制到临时表，</li><li>删了users表</li><li>将临时表重命名为users</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">val MIGRATION_2_3 = object : Migration(2, 3) &#123;</span><br><span class="line">    override fun migrate(database: SupportSQLiteDatabase) &#123;</span><br><span class="line"></span><br><span class="line">    // 创建临时表</span><br><span class="line">        database.execSQL(</span><br><span class="line">                &quot;CREATE TABLE users_new (userid TEXT, username TEXT, last_update INTEGER, PRIMARY KEY(userid))&quot;)</span><br><span class="line">        // 拷贝数据</span><br><span class="line">        database.execSQL(</span><br><span class="line">                &quot;INSERT INTO users_new (userid, username, last_update) SELECT userid, username, last_update FROM users&quot;)</span><br><span class="line">        // 删除老的表</span><br><span class="line">        database.execSQL(&quot;DROP TABLE users&quot;)</span><br><span class="line">        // 改名</span><br><span class="line">        database.execSQL(&quot;ALTER TABLE users_new RENAME TO users&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加Migration"><a href="#添加Migration" class="headerlink" title="添加Migration"></a>添加Migration</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// A prepackaged database is provided.</span><br><span class="line">Room.databaseBuilder(appContext, AppDatabase.class, &quot;Sample.db&quot;)</span><br><span class="line">    .createFromAsset(&quot;database/myapp.db&quot;)</span><br><span class="line">    .addMigrations(MIGRATION_2_3)</span><br><span class="line">    .fallbackToDestructiveMigration()</span><br><span class="line">    .build()</span><br></pre></td></tr></table></figure><ol><li>由于应用中定义的数据库的版本为 3，而设备上已安装的数据库的版本为 2，因此需要进行迁移。</li><li>由于已实现从版本 2 到版本 3 的迁移路径，因此 Room 会运行已定义的 migrate() 方法将设备上的数据库实例更新到版本 3，从而保留该数据库内已有的数据。Room 不使用预封装的数据库文件，因为 Room 仅在回退迁移中才会使用预封装的数据库文件。</li><li>由于调用了 <code>fallbackToDestructiveMigration()</code> 构建器方法，因此该回退迁移具有破坏性。Room 会丢弃设备上的数据库实例。</li></ol><h4 id="多步迁移"><a href="#多步迁移" class="headerlink" title="多步迁移"></a>多步迁移</h4><p>预封装的数据库文件还可能影响包含多个步骤的迁移。考虑以下情况：</p><ul><li>您的应用定义了一个版本为 4 的 Room 数据库。</li><li>设备上已安装的数据库实例的版本为 2。</li><li>存在版本为 3 的预封装数据库文件。</li><li>已实现从版本 3 到版本 4 的迁移路径，但未实现从版本 2 到版本 3 的迁移路径。</li><li>已启用破坏性迁移。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// Database class definition declaring version 4.</span><br><span class="line">@Database(version = 4)</span><br><span class="line">abstract class AppDatabase : RoomDatabase() &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Migration path definition from version 3 to version 4.</span><br><span class="line">val MIGRATION_3_4 = object : Migration(3, 4) &#123;</span><br><span class="line">    override fun migrate(database: SupportSQLiteDatabase) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Destructive migrations are enabled and a prepackaged database is</span><br><span class="line">// provided.</span><br><span class="line">Room.databaseBuilder(appContext, AppDatabase.class, &quot;Sample.db&quot;)</span><br><span class="line">    .createFromAsset(&quot;database/myapp.db&quot;)</span><br><span class="line">    .addMigrations(MIGRATION_3_4)</span><br><span class="line">    .fallbackToDestructiveMigration()</span><br><span class="line">    .build()</span><br></pre></td></tr></table></figure><p>以下是在这种情况下会发生的情况：</p><ol><li>由于应用中定义的数据库的版本为 4，而设备上已安装的数据库实例的版本为 2，因此需要进行迁移。</li><li>由于未实现从版本 2 到版本 3 的迁移路径，因此该迁移属于回退迁移。</li><li>由于调用了 fallbackToDestructiveMigration() 构建器方法，因此该回退迁移具有破坏性。Room 会丢弃设备上的数据库实例。</li><li>由于存在版本为 3 的预封装数据库文件，因此 Room 会重新创建数据库，并使用预封装数据库文件的内容对其进行填充。</li><li>现在，设备上安装的数据库的版本为 3。由于此版本仍然低于应用中定义的版本，因此需要再进行一次迁移。</li><li>由于已实现从版本 3 到版本 4 的迁移路径，因此 Room 会运行已定义的 migrate() 方法将设备上的数据库实例更新到版本 4，从而保留从版本为 3 的已封装数据库文件中复制的数据。</li></ol><p><a href="https://developer.android.com/training/data-storage/room/prepopulate?hl=zh-cn" target="_blank" rel="noopener">官网</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;升级version&quot;&gt;&lt;a href=&quot;#升级version&quot; class=&quot;headerlink&quot; title=&quot;升级version&quot;&gt;&lt;/a&gt;升级version&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Database class definition declaring version 3.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@Database(version = 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abstract class AppDatabase : RoomDatabase() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;提供Migration&quot;&gt;&lt;a href=&quot;#提供Migration&quot; class=&quot;headerlink&quot; title=&quot;提供Migration&quot;&gt;&lt;/a&gt;提供Migration&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Migration path definition from version 2 to version 3.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val MIGRATION_2_3 = object : Migration(2, 3) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override fun migrate(database: SupportSQLiteDatabase) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        database.execSQL(&amp;quot;CREATE TABLE IF NOT EXISTS `$&amp;#123;TABLE_NAME&amp;#125;` (`jar_ids` TEXT NOT NULL, `time` INTEGER NOT NULL, `record_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `id` INTEGER NOT NULL, `cycles` TEXT NOT NULL, `inflation_time` TEXT NOT NULL, `cycles_vacuum` TEXT NOT NULL, `final_vacuum` TEXT NOT NULL, `final_vacuum_hold` TEXT NOT NULL, `create_time` TEXT NOT NULL)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&quot;如何写migration迁移sql语句&quot;&gt;&lt;a href=&quot;#如何写migration迁移sql语句&quot; class=&quot;headerlink&quot; title=&quot;如何写migration迁移sql语句&quot;&gt;&lt;/a&gt;如何写migration迁移sql语句&lt;/h5&gt;&lt;p&gt;其实有一个取巧的方式，当在Table.class增加完字段或者新增完Entity，找到 &lt;code&gt;exportSchame&lt;/code&gt;导出目录下的3.json。你会发现sql语句已经被生成出来了。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="jetpack" scheme="https://hanyechun.github.io/tags/jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Expected @HiltAndroidApp to have a value. Did you forget to apply the Gradle Plugin? (dagger.hilt.android.plugin)</title>
    <link href="https://hanyechun.github.io/2022/09/03/Expected-HiltAndroidApp-to-have-a-value-Did-you-forget-to-apply-the-Gradle-Plugin-dagger-hilt-android-plugin/"/>
    <id>https://hanyechun.github.io/2022/09/03/Expected-HiltAndroidApp-to-have-a-value-Did-you-forget-to-apply-the-Gradle-Plugin-dagger-hilt-android-plugin/</id>
    <published>2022-09-03T04:36:46.000Z</published>
    <updated>2022-09-03T05:12:17.566Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://stackoverflow.com/questions/62887817/expected-hiltandroidapp-to-have-a-value-did-you-forget-to-apply-the-gradle-plu" target="_blank" rel="noopener">stack overflow</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/62887817/expected-hiltandroidapp-to-have-a-value-did-you-forget-to-apply-the-gradle-plu&quot; tar
      
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="jetpack" scheme="https://hanyechun.github.io/tags/jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin List强制转换警告</title>
    <link href="https://hanyechun.github.io/2022/08/30/Kotlin-List%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2%E8%AD%A6%E5%91%8A/"/>
    <id>https://hanyechun.github.io/2022/08/30/Kotlin-List强制转换警告/</id>
    <published>2022-08-30T07:49:11.000Z</published>
    <updated>2022-08-30T07:57:54.803Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://stackoverflow.com/questions/36569421/kotlin-how-to-work-with-list-casts-unchecked-cast-kotlin-collections-listkot" target="_blank" rel="noopener">stack overflow</a></p><h4 id="Kotlin-How-to-work-with-List-casts-Unchecked-Cast-kotlin-collections-List-lt-Kotlin-Any-gt-to-kotlin-colletions-List"><a href="#Kotlin-How-to-work-with-List-casts-Unchecked-Cast-kotlin-collections-List-lt-Kotlin-Any-gt-to-kotlin-colletions-List" class="headerlink" title="Kotlin: How to work with List casts: Unchecked Cast: kotlin.collections.List&lt;Kotlin.Any?&gt; to kotlin.colletions.List"></a>Kotlin: How to work with List casts: Unchecked Cast: kotlin.collections.List&lt;Kotlin.Any?&gt; to kotlin.colletions.List<waypoint></waypoint></h4><blockquote><p>在 Kotlin 中，一般情况下无法在运行时检查泛型参数（就像只检查 a 的项目List<t>，这只是一种特殊情况），因此将泛型类型转换为具有不同泛型参数的另一个类型会引发警告，除非cast 位于方差范围内。</t></p></blockquote><p>有几种不同的解决方案 (推荐filterIsInstance)</p><h4 id="您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告"><a href="#您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告" class="headerlink" title="您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告"></a>您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Suppress(&quot;UNCHECKED_CAST&quot;)</span><br><span class="line">val waypointList = list as? List&lt;Waypoint&gt; ?: return null</span><br></pre></td></tr></table></figure><h4 id="使用-filterIsInstance-函数，它检查项目类型并返回包含传递类型的项目的列表："><a href="#使用-filterIsInstance-函数，它检查项目类型并返回包含传递类型的项目的列表：" class="headerlink" title="使用.filterIsInstance()函数，它检查项目类型并返回包含传递类型的项目的列表："></a>使用.filterIsInstance<t>()函数，它检查项目类型并返回包含传递类型的项目的列表：</t></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">val waypointList: List&lt;Waypoint&gt; = list.filterIsInstance&lt;Waypoint&gt;()</span><br><span class="line"></span><br><span class="line">if (waypointList.size != list.size)</span><br><span class="line">    return null</span><br></pre></td></tr></table></figure><p>请注意，如果您使用filterIsInstance并且原始列表包含不同类型的元素，您的代码将默默地将它们过滤掉。有时这是你想要的，但有时你可能宁愿IllegalStateException抛出一个或类似的东西。如果是后者，那么您可以创建自己的方法来检查然后强制转换：<code>inline fun &lt;reified R&gt; Iterable&lt;*&gt;.mapAsInstance() = map { it.apply { check(this is R) } as R }</code></p><a id="more"></a><h4 id="编写一个实用函数来检查类型并在类型正确时返回相同的列表，从而将强制转换（从编译器的角度来看仍然未经检查）封装在其中："><a href="#编写一个实用函数来检查类型并在类型正确时返回相同的列表，从而将强制转换（从编译器的角度来看仍然未经检查）封装在其中：" class="headerlink" title="编写一个实用函数来检查类型并在类型正确时返回相同的列表，从而将强制转换（从编译器的角度来看仍然未经检查）封装在其中："></a>编写一个实用函数来检查类型并在类型正确时返回相同的列表，从而将强制转换（从编译器的角度来看仍然未经检查）封装在其中：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Suppress(&quot;UNCHECKED_CAST&quot;)</span><br><span class="line">inline fun &lt;reified T : Any&gt; List&lt;*&gt;.checkItemsAre() =</span><br><span class="line">        if (all &#123; it is T &#125;)</span><br><span class="line">            this as List&lt;T&gt;</span><br><span class="line">        else null</span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val waypointList = list.checkItemsAre&lt;Waypoint&gt;() ?: return null</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/36569421/kotlin-how-to-work-with-list-casts-unchecked-cast-kotlin-collections-listkot&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;stack overflow&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Kotlin-How-to-work-with-List-casts-Unchecked-Cast-kotlin-collections-List-lt-Kotlin-Any-gt-to-kotlin-colletions-List&quot;&gt;&lt;a href=&quot;#Kotlin-How-to-work-with-List-casts-Unchecked-Cast-kotlin-collections-List-lt-Kotlin-Any-gt-to-kotlin-colletions-List&quot; class=&quot;headerlink&quot; title=&quot;Kotlin: How to work with List casts: Unchecked Cast: kotlin.collections.List&amp;lt;Kotlin.Any?&amp;gt; to kotlin.colletions.List&quot;&gt;&lt;/a&gt;Kotlin: How to work with List casts: Unchecked Cast: kotlin.collections.List&amp;lt;Kotlin.Any?&amp;gt; to kotlin.colletions.List&lt;waypoint&gt;&lt;/waypoint&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在 Kotlin 中，一般情况下无法在运行时检查泛型参数（就像只检查 a 的项目List&lt;t&gt;，这只是一种特殊情况），因此将泛型类型转换为具有不同泛型参数的另一个类型会引发警告，除非cast 位于方差范围内。&lt;/t&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有几种不同的解决方案 (推荐filterIsInstance)&lt;/p&gt;
&lt;h4 id=&quot;您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告&quot;&gt;&lt;a href=&quot;#您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告&quot; class=&quot;headerlink&quot; title=&quot;您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告&quot;&gt;&lt;/a&gt;您已经检查了类型，并且非常确定演员表是安全的。鉴于此，您可以使用抑制警告&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Suppress(&amp;quot;UNCHECKED_CAST&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val waypointList = list as? List&amp;lt;Waypoint&amp;gt; ?: return null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;使用-filterIsInstance-函数，它检查项目类型并返回包含传递类型的项目的列表：&quot;&gt;&lt;a href=&quot;#使用-filterIsInstance-函数，它检查项目类型并返回包含传递类型的项目的列表：&quot; class=&quot;headerlink&quot; title=&quot;使用.filterIsInstance()函数，它检查项目类型并返回包含传递类型的项目的列表：&quot;&gt;&lt;/a&gt;使用.filterIsInstance&lt;t&gt;()函数，它检查项目类型并返回包含传递类型的项目的列表：&lt;/t&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;val waypointList: List&amp;lt;Waypoint&amp;gt; = list.filterIsInstance&amp;lt;Waypoint&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (waypointList.size != list.size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;请注意，如果您使用filterIsInstance并且原始列表包含不同类型的元素，您的代码将默默地将它们过滤掉。有时这是你想要的，但有时你可能宁愿IllegalStateException抛出一个或类似的东西。如果是后者，那么您可以创建自己的方法来检查然后强制转换：&lt;code&gt;inline fun &amp;lt;reified R&amp;gt; Iterable&amp;lt;*&amp;gt;.mapAsInstance() = map { it.apply { check(this is R) } as R }&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="kotlin" scheme="https://hanyechun.github.io/tags/kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Android Navigation回退栈</title>
    <link href="https://hanyechun.github.io/2022/08/25/Android-Navigation%E5%9B%9E%E9%80%80%E6%A0%88/"/>
    <id>https://hanyechun.github.io/2022/08/25/Android-Navigation回退栈/</id>
    <published>2022-08-25T01:44:03.000Z</published>
    <updated>2022-08-25T03:00:05.639Z</updated>
    
    <content type="html"><![CDATA[<p>Navigation Fragment的跳转依赖于 <code>action</code> 标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;action</span><br><span class="line">    android:id=&quot;@+id/action_cameraxFragment_to_previewFragment&quot;</span><br><span class="line">    app:destination=&quot;@id/preview_fragment&quot;</span><br><span class="line">    app:launchSingleTop=&quot;true&quot;</span><br><span class="line">    app:popUpTo=&quot;@id/camerax_fragment&quot;</span><br><span class="line">    app:popUpToInclusive=&quot;true&quot; /&gt;</span><br><span class="line"></span><br><span class="line">#id: 动作id</span><br><span class="line">#destination: 目标页面</span><br><span class="line">#launchSingleTop: 是否开启singleTop模式</span><br><span class="line">#popUpTo: 当前属于弹出栈</span><br><span class="line">#popUpToInclusive: 弹出栈是否包含目标</span><br></pre></td></tr></table></figure><h4 id="launchSingleTop"><a href="#launchSingleTop" class="headerlink" title="launchSingleTop"></a>launchSingleTop</h4><blockquote><p>代表启动当前fragment后，会栈顶复用.</p></blockquote><p>当属性值为 <code>true</code> 时效果与 Activity 的 <code>singleTop</code> 启动模式一致，即当返回栈顶与目的地一样时，不再重新创建新的目的地。</p><a id="more"></a><p>不同的是，栈顶的 Activity 会收到 onNewIntent 回调以更新跳转参数，而 Fragment 是没有这个回调的，代替它的是，需要在 Fragment 中添加 onDestinationChanged 监听器，并使用新的跳转参数（如需）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">findNavController().addOnDestinationChangedListener &#123;</span><br><span class="line">    controller, destination, arguments -&gt;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="popUpTo、popUpToInclusive"><a href="#popUpTo、popUpToInclusive" class="headerlink" title="popUpTo、popUpToInclusive"></a>popUpTo、popUpToInclusive</h4><ul><li>popUpTo：属性表示堆栈返回到某个界面，其后的栈数据清空。</li><li>popUpToInclusive：上述 pop 动作是否包含 popUpTo 给定的目的地，默认为 false。</li></ul><p>举个例子，假设当前的返回栈是 A -&gt; B -&gt; C，C 添加一个 action 并指定 destination 为 A、popUpTo 为 A、popUpToInclusive 为 true，则跳转后的返回栈为 A’ （因为旧的 A 已经弹出返回栈）；反之，如果 popUpToInclusive 指定为 false，则目前的返回栈为 A -&gt; A’。<br>所以，可以发现 Navigation 实现的类 singleTask 模式，与 Activity 本身还是有一些区别的。<br>如果确定返回栈中本身就有 A，则还可以通过 popBackStack 实现回到 A 的效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findNavController().popBackStack(R.id.A, inclusive = false)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Navigation Fragment的跳转依赖于 &lt;code&gt;action&lt;/code&gt; 标签&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;action&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:id=&amp;quot;@+id/action_cameraxFragment_to_previewFragment&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app:destination=&amp;quot;@id/preview_fragment&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app:launchSingleTop=&amp;quot;true&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app:popUpTo=&amp;quot;@id/camerax_fragment&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app:popUpToInclusive=&amp;quot;true&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#id: 动作id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#destination: 目标页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#launchSingleTop: 是否开启singleTop模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#popUpTo: 当前属于弹出栈&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#popUpToInclusive: 弹出栈是否包含目标&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;launchSingleTop&quot;&gt;&lt;a href=&quot;#launchSingleTop&quot; class=&quot;headerlink&quot; title=&quot;launchSingleTop&quot;&gt;&lt;/a&gt;launchSingleTop&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;代表启动当前fragment后，会栈顶复用.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当属性值为 &lt;code&gt;true&lt;/code&gt; 时效果与 Activity 的 &lt;code&gt;singleTop&lt;/code&gt; 启动模式一致，即当返回栈顶与目的地一样时，不再重新创建新的目的地。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="jetpack" scheme="https://hanyechun.github.io/tags/jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Android11 分区存储</title>
    <link href="https://hanyechun.github.io/2022/08/24/Android11-%E5%88%86%E5%8C%BA%E5%AD%98%E5%82%A8/"/>
    <id>https://hanyechun.github.io/2022/08/24/Android11-分区存储/</id>
    <published>2022-08-24T10:34:42.000Z</published>
    <updated>2022-08-24T10:35:44.849Z</updated>
    
    <content type="html"><![CDATA[<p>I don’t have time to write for a while, so let’s look <a href="https://cloud.tencent.com/developer/inventory/692/article/1706411" target="_blank" rel="noopener">here</a> first.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I don’t have time to write for a while, so let’s look &lt;a href=&quot;https://cloud.tencent.com/developer/inventory/692/article/1706411&quot; target=
      
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>git常用指令</title>
    <link href="https://hanyechun.github.io/2022/08/23/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>https://hanyechun.github.io/2022/08/23/git常用指令/</id>
    <published>2022-08-23T09:28:23.000Z</published>
    <updated>2022-08-23T09:37:58.043Z</updated>
    
    <content type="html"><![CDATA[<h4 id="git更换远程仓库"><a href="#git更换远程仓库" class="headerlink" title="git更换远程仓库"></a>git更换远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote 查看所有远程仓库</span><br><span class="line"></span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add origin 你的新远程仓库地址</span><br></pre></td></tr></table></figure><h4 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f</span><br></pre></td></tr></table></figure><h4 id="git配置代理"><a href="#git配置代理" class="headerlink" title="git配置代理"></a>git配置代理</h4><blockquote><p>先打开shadowsocks，找到http代理设置查看代理端口，然后替换以下命令的端口，即可优化git的访问和下载速度</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:1087</span><br><span class="line">git config --global https.proxy https://127.0.0.1:1087</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h4><ul><li><code>git log</code>可以查看提交历史，以便确定要回退到哪个版本</li><li><code>git reset --hard commit_id</code>回退到指定版本</li><li><code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本<blockquote><p>若只回退版本不修改代码，<code>reset</code>之后用<code>git push</code>推到远程即可，若发生错误可强推<code>git push -f</code></p></blockquote></li></ul><h4 id="android命令行打包"><a href="#android命令行打包" class="headerlink" title="android命令行打包"></a>android命令行打包</h4><p>打包命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew assembleRelease</span><br></pre></td></tr></table></figure><p>若有多渠道，指定渠道打包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew assembleHuaweiRelease</span><br></pre></td></tr></table></figure><p>出现<code>zsh: permission denied: ./gradlew</code>解决方案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x gradlew</span><br></pre></td></tr></table></figure><h4 id="git打标签"><a href="#git打标签" class="headerlink" title="git打标签"></a>git打标签</h4><p>列出标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><p>查找特定标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -l &quot;v1.8.5*&quot;</span><br></pre></td></tr></table></figure><p>创建标签-轻量标签、附注标签</p><ul><li><p>附注标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -a v1.4 -m &apos;my version v1.4&apos;</span><br></pre></td></tr></table></figure></li><li><p>轻量标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag v1.4</span><br></pre></td></tr></table></figure></li></ul><p>查看标签信息和提交信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show v1.4</span><br></pre></td></tr></table></figure><p>后期打标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -a v1.2 9fceb02</span><br></pre></td></tr></table></figure><p>共享标签-推送到远程服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin v1.2</span><br></pre></td></tr></table></figure><p>一次性推送多个标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure><p>删除标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d v1.2</span><br></pre></td></tr></table></figure><p>删除远程标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete v1.2</span><br></pre></td></tr></table></figure><h4 id="git-无法push远程仓库-Note-about-fast-forwards"><a href="#git-无法push远程仓库-Note-about-fast-forwards" class="headerlink" title="git 无法push远程仓库 Note about fast-forwards"></a>git 无法push远程仓库 Note about fast-forwards</h4><p>参考文章：<a href="https://blog.csdn.net/zwkkkk1/article/details/82699387" target="_blank" rel="noopener">https://blog.csdn.net/zwkkkk1/article/details/82699387</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;git更换远程仓库&quot;&gt;&lt;a href=&quot;#git更换远程仓库&quot; class=&quot;headerlink&quot; title=&quot;git更换远程仓库&quot;&gt;&lt;/a&gt;git更换远程仓库&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote 查看所有远程仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote rm origin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin 你的新远程仓库地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;强制推送&quot;&gt;&lt;a href=&quot;#强制推送&quot; class=&quot;headerlink&quot; title=&quot;强制推送&quot;&gt;&lt;/a&gt;强制推送&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push -f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;git配置代理&quot;&gt;&lt;a href=&quot;#git配置代理&quot; class=&quot;headerlink&quot; title=&quot;git配置代理&quot;&gt;&lt;/a&gt;git配置代理&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;先打开shadowsocks，找到http代理设置查看代理端口，然后替换以下命令的端口，即可优化git的访问和下载速度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global http.proxy http://127.0.0.1:1087&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global https.proxy https://127.0.0.1:1087&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://hanyechun.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Android APP版本工具</title>
    <link href="https://hanyechun.github.io/2022/08/23/Android-APP%E7%89%88%E6%9C%AC%E5%B7%A5%E5%85%B7/"/>
    <id>https://hanyechun.github.io/2022/08/23/Android-APP版本工具/</id>
    <published>2022-08-23T09:25:33.000Z</published>
    <updated>2022-08-23T09:34:04.934Z</updated>
    
    <content type="html"><![CDATA[<h4 id="获取版本名称"><a href="#获取版本名称" class="headerlink" title="获取版本名称"></a>获取版本名称</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">private fun obtainVersionName(): String &#123;</span><br><span class="line">    val manager = packageManager</span><br><span class="line">    return try &#123;</span><br><span class="line">        manager.getPackageInfo(packageName, 0).versionName</span><br><span class="line">    &#125; catch (e: PackageManager.NameNotFoundException) &#123;</span><br><span class="line">        e.printStackTrace()</span><br><span class="line">        &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;获取版本名称&quot;&gt;&lt;a href=&quot;#获取版本名称&quot; class=&quot;headerlink&quot; title=&quot;获取版本名称&quot;&gt;&lt;/a&gt;获取版本名称&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo部署到github上，白屏了</title>
    <link href="https://hanyechun.github.io/2022/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A%EF%BC%8C%E7%99%BD%E5%B1%8F%E4%BA%86/"/>
    <id>https://hanyechun.github.io/2022/08/23/Hexo部署到github上，白屏了/</id>
    <published>2022-08-23T04:52:44.000Z</published>
    <updated>2022-08-23T05:00:49.406Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>先你应该在本地测试 Hexo 是否正确安装。<br>在 hexo 的目录下，运行 <code>hexo s</code>, 如果 hexo 安装正确会出现如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  iblog hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p> 这个时候，打开浏览器，输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 看看是不是能够看到你的网站。<br> 如果正常显示。说明 Hexo 安装正确，问题就在出现在 github 上了。</p></li><li><p>如果你正确地在 hexo 中配置了 github。你可以先 <code>hexo clean</code> 再 <code>hexo d -g</code> 。<br>如果成功，最后应该会显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;git@github.com:xxx/xxx.github.io.git&apos;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="3"><li><p>前两步都没问题，就该检查 github 仓库了。<br>打开你的 github 上名为 xxx.github.io 的仓库，如果部署正确上面应该会有内容的。至少会有一个 <code>index.html</code> 之类的文件。</p></li><li><p>如果你能找到 index.html 文件，但是还是打不开你的网站，那说明很有可能 github page 相关配置出了问题。<br>可以做一个简单的测试。把 xxx.github.io 仓库下的内容全部删除了，新建一个 <code>index.html</code> 文件，输入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt; hexo test &lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;hexo test&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt; hello world &lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ol><p>然后你在浏览器打开 xxx.github.io<br>如果打开没问题，能看到 hello world, 说明你的 github 仓库配置没问题，你需要检查你的 hexo 是不是正确上传到了 github.<br>如果打开还是一片空白，建议你删了这个仓库，找个教程重新新建一个仓库。</p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;先你应该在本地测试 Hexo 是否正确安装。&lt;br&gt;在 hexo 的目录下，运行 &lt;code&gt;hexo s&lt;/code&gt;, 如果 hexo 安装正确会出现如下内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  iblog hexo s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Start processing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; 这个时候，打开浏览器，输入 &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://localhost:4000&lt;/a&gt; 看看是不是能够看到你的网站。&lt;br&gt; 如果正常显示。说明 Hexo 安装正确，问题就在出现在 github 上了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你正确地在 hexo 中配置了 github。你可以先 &lt;code&gt;hexo clean&lt;/code&gt; 再 &lt;code&gt;hexo d -g&lt;/code&gt; 。&lt;br&gt;如果成功，最后应该会显示&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Branch &amp;apos;master&amp;apos; set up to track remote branch &amp;apos;master&amp;apos; from &amp;apos;git@github.com:xxx/xxx.github.io.git&amp;apos;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Deploy done: git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Float保留小数位</title>
    <link href="https://hanyechun.github.io/2022/08/23/Float%E4%BF%9D%E7%95%99%E5%B0%8F%E6%95%B0%E4%BD%8D/"/>
    <id>https://hanyechun.github.io/2022/08/23/Float保留小数位/</id>
    <published>2022-08-23T03:34:31.000Z</published>
    <updated>2022-08-23T03:48:15.906Z</updated>
    
    <content type="html"><![CDATA[<p>Float保留小数位的几种方法：</p><h4 id="使用DecimalFormat"><a href="#使用DecimalFormat" class="headerlink" title="使用DecimalFormat"></a>使用DecimalFormat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun Float.save1float(): String = DecimalFormat(&quot;0.0&quot;).format(this)</span><br></pre></td></tr></table></figure><h4 id="使用StringFormat"><a href="#使用StringFormat" class="headerlink" title="使用StringFormat"></a>使用StringFormat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fun Float.save2float():String = String.format(&quot;%.2f&quot;, this)</span><br><span class="line"></span><br><span class="line">这里返回的是string，如果想要float可以改成以下方法</span><br><span class="line"></span><br><span class="line">fun Float.save2float():Float = String.format(&quot;%.2f&quot;, this).toFloatOrNull() ?: 0f</span><br></pre></td></tr></table></figure><h4 id="使用BigDecimal"><a href="#使用BigDecimal" class="headerlink" title="使用BigDecimal"></a>使用BigDecimal</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//保留小数位, scale代表小数位</span><br><span class="line">fun Float.keepDecimal(scale: Int = 2) = BigDecimal(this.toDouble()).setScale(scale, BigDecimal.ROUND_HALF_UP).toFloat()</span><br></pre></td></tr></table></figure><h4 id="使用Math"><a href="#使用Math" class="headerlink" title="使用Math"></a>使用Math</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">float a = 123.2334f; </span><br><span class="line">float b = (float)(Math.round(a*100))/100;(这里的100就是2位小数点,如果要其它位,如4位,这里两个100改成10000)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Float保留小数位的几种方法：&lt;/p&gt;
&lt;h4 id=&quot;使用DecimalFormat&quot;&gt;&lt;a href=&quot;#使用DecimalFormat&quot; class=&quot;headerlink&quot; title=&quot;使用DecimalFormat&quot;&gt;&lt;/a&gt;使用DecimalFormat&lt;/
      
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="float" scheme="https://hanyechun.github.io/tags/float/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署到github提示TypeError [ERR_INVALID_ARG_TYPE]: The &#39;mode&#39; argument must be integer. </title>
    <link href="https://hanyechun.github.io/2022/08/22/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0github%E6%8F%90%E7%A4%BATypeError-ERR-INVALID-ARG-TYPE-The-mode-argument-must-be-integer/"/>
    <id>https://hanyechun.github.io/2022/08/22/Hexo部署到github提示TypeError-ERR-INVALID-ARG-TYPE-The-mode-argument-must-be-integer/</id>
    <published>2022-08-22T11:15:37.000Z</published>
    <updated>2022-08-22T11:38:52.073Z</updated>
    
    <content type="html"><![CDATA[<p>由于前段时间学习vue，重装了我的node，导致node版本过高。hexo部署到github时出现以下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">TypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be integer. Received an instance of Object</span><br><span class="line">    at copyFile (fs.js:1972:10)</span><br><span class="line">    at tryCatcher (/Users/hyc/Documents/iblog/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at ret (eval at makeNodePromisifiedEval (/Users/hyc/.nvm/versions/node/v14.15.0/lib/node_modules/hexo-cli/node_modules/bluebird/js/release/promisify.js:184:12), &lt;anonymous&gt;:13:39)</span><br><span class="line">    at /Users/hyc/Documents/iblog/node_modules/hexo-fs/lib/fs.js:144:39</span><br><span class="line">    at tryCatcher (/Users/hyc/Documents/iblog/node_modules/bluebird/js/release/util.js:16:23)</span><br></pre></td></tr></table></figure><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>node14与hexo不兼容导致。</p><p>查看node版本号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 3.9.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: win32 10.0.19042</span><br><span class="line">node: 14.17.5</span><br></pre></td></tr></table></figure><h4 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h4><p>当前node版本是 <code>14.17.5</code>，从14降低到12即可解决此问题。推荐<code>12.17.0</code>。</p><a id="more"></a><p>node升降机、版本切换，可<a href="https://hanyechun.github.io/2022/08/19/Node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC%E3%80%81%E9%99%8D%E7%BA%A7%E3%80%81%E5%8D%87%E7%BA%A7/#more">点此</a>文章。</p><h4 id="解决方案二-未尝试，不知是否可行"><a href="#解决方案二-未尝试，不知是否可行" class="headerlink" title="解决方案二 (未尝试，不知是否可行)"></a>解决方案二 (未尝试，不知是否可行)</h4><p>修改package.json文件，升级hexo-renderer-stylus到2.0.0版本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure><p>参考<a href="https://www.4spaces.org/hexo-mode-argument-must-be-integer-error/" target="_blank" rel="noopener">此文</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于前段时间学习vue，重装了我的node，导致node版本过高。hexo部署到github时出现以下错误：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FATAL Something&amp;apos;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TypeError [ERR_INVALID_ARG_TYPE]: The &amp;quot;mode&amp;quot; argument must be integer. Received an instance of Object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at copyFile (fs.js:1972:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryCatcher (/Users/hyc/Documents/iblog/node_modules/bluebird/js/release/util.js:16:23)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at ret (eval at makeNodePromisifiedEval (/Users/hyc/.nvm/versions/node/v14.15.0/lib/node_modules/hexo-cli/node_modules/bluebird/js/release/promisify.js:184:12), &amp;lt;anonymous&amp;gt;:13:39)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at /Users/hyc/Documents/iblog/node_modules/hexo-fs/lib/fs.js:144:39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryCatcher (/Users/hyc/Documents/iblog/node_modules/bluebird/js/release/util.js:16:23)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h4&gt;&lt;p&gt;node14与hexo不兼容导致。&lt;/p&gt;
&lt;p&gt;查看node版本号：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo: 3.9.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo-cli: 4.3.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os: win32 10.0.19042&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node: 14.17.5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;解决方案一&quot;&gt;&lt;a href=&quot;#解决方案一&quot; class=&quot;headerlink&quot; title=&quot;解决方案一&quot;&gt;&lt;/a&gt;解决方案一&lt;/h4&gt;&lt;p&gt;当前node版本是 &lt;code&gt;14.17.5&lt;/code&gt;，从14降低到12即可解决此问题。推荐&lt;code&gt;12.17.0&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
      <category term="node" scheme="https://hanyechun.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin 1.6+ Room无法使用suspend挂起符</title>
    <link href="https://hanyechun.github.io/2022/08/22/Kotlin-1-6-Room%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8suspend%E6%8C%82%E8%B5%B7%E7%AC%A6/"/>
    <id>https://hanyechun.github.io/2022/08/22/Kotlin-1-6-Room无法使用suspend挂起符/</id>
    <published>2022-08-22T11:00:02.000Z</published>
    <updated>2022-08-22T11:06:44.294Z</updated>
    
    <content type="html"><![CDATA[<p>将 kotlin 升级到 1.6.0 会导致 Room Dao 挂起修改器中断构建项目并出现错误:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Not sure how to handle query method&apos;s return type........</span><br></pre></td></tr></table></figure><p>除了在存储库中运行 Dao 函数 withContext(Disapatchers.IO) 的解决方法之外，还有其他解决方案吗？</p><p>解决：升级Room版本至 <code>2.4.0</code> 以上</p><blockquote><p>The new Kotlin compiler (aka <code>1.6.+</code>) needs room version <code>2.4.0</code> at least to support the language. So Upgrade your room dependency to <code>2.4.0.</code></p><p>And since you are using the version of room you also have to target Android <code>API 31</code>.</p></blockquote><a id="more"></a><p>译：</p><blockquote><p>新的 Kotlin 编译器 (aka )至少1.6.+需要房间版本来支持该语言。2.4.0所以将你的房间依赖升级到2.4.0.</p><p>而且由于您使用的是 room 版本，因此您还必须针对 Android API 31</p></blockquote><p>参考：<br><a href="https://stackoverflow.com/questions/70094669/how-to-use-suspend-modifier-in-room-dao-after-kotlin-upgrade-to-1-6-0" target="_blank" rel="noopener">https://stackoverflow.com/questions/70094669/how-to-use-suspend-modifier-in-room-dao-after-kotlin-upgrade-to-1-6-0</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将 kotlin 升级到 1.6.0 会导致 Room Dao 挂起修改器中断构建项目并出现错误:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Not sure how to handle query method&amp;apos;s return type........&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;除了在存储库中运行 Dao 函数 withContext(Disapatchers.IO) 的解决方法之外，还有其他解决方案吗？&lt;/p&gt;
&lt;p&gt;解决：升级Room版本至 &lt;code&gt;2.4.0&lt;/code&gt; 以上&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The new Kotlin compiler (aka &lt;code&gt;1.6.+&lt;/code&gt;) needs room version &lt;code&gt;2.4.0&lt;/code&gt; at least to support the language. So Upgrade your room dependency to &lt;code&gt;2.4.0.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And since you are using the version of room you also have to target Android &lt;code&gt;API 31&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="jetpack" scheme="https://hanyechun.github.io/tags/jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Android Room数据库警告Schema export directory错误</title>
    <link href="https://hanyechun.github.io/2022/08/22/Android-Room%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AD%A6%E5%91%8ASchema-export-directory%E9%94%99%E8%AF%AF/"/>
    <id>https://hanyechun.github.io/2022/08/22/Android-Room数据库警告Schema-export-directory错误/</id>
    <published>2022-08-22T10:21:24.000Z</published>
    <updated>2022-08-22T10:51:21.751Z</updated>
    
    <content type="html"><![CDATA[<p>使用Room数据库的时候，虽然项目可以运行起来。但是，却报以下error:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error:(22, 17) 警告: Schema export directory is not provided to the annotation processor so we cannot export the schema. </span><br><span class="line"></span><br><span class="line">You can either provide `room.schemaLocation` annotation processor argument OR set exportSchema to false.</span><br></pre></td></tr></table></figure><p>As per the <a href="https://developer.android.com/reference/android/arch/persistence/room/Database.html#exportSchema()" target="_blank" rel="noopener">docs</a></p><blockquote><p><strong>导出模式</strong><br>您可以设置注释处理器参数 (<code>room.schemaLocation</code>) 来告诉 Room 将架构导出到文件夹中。尽管这不是强制性的，但在您的代码库中拥有版本历史记录是一个很好的做法，并且您应该将该文件提交到您的版本控制系统中（但不要将它与您的应用程序一起发布！）。</p><p>设置时<code>room.schemaLocation</code>，Room 将检查此变量，如果设置为 <code>true</code>，则其架构将导出到给定文件夹中。</p><p><code>exportSchema</code>默认情况<code>true</code>下，但是当您不想保留版本历史记录时，您可以为数据库禁用它（例如仅在内存中的数据库）。</p></blockquote><p>实际上，上面已经提示了开发者应该怎么处理，给出了两种方案。</p><a id="more"></a><h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一:"></a>方案一:</h4><p>给RoomDatabase设置exportSchema注解为false。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Database(entities = &#123; YourEntity.class &#125;, version = 1, exportSchema = false)</span><br><span class="line">public abstract class MovieDatabase extends RoomDatabase &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方案二：-推荐"><a href="#方案二：-推荐" class="headerlink" title="方案二：(推荐)"></a>方案二：(推荐)</h4><p>在项目中gradle中通过 annotationProcessorOptions 注解，为room.schemaLocation指定schemas的子文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion 26</span><br><span class="line">    buildToolsVersion &quot;26.0.2&quot;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId &quot;com.xingen.architecturecomponents&quot;</span><br><span class="line">        minSdkVersion 15</span><br><span class="line">        targetSdkVersion 26</span><br><span class="line">        versionCode 1</span><br><span class="line">        versionName &quot;1.0&quot;</span><br><span class="line">        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;</span><br><span class="line"></span><br><span class="line">        //指定room.schemaLocation生成的文件路径</span><br><span class="line">        javaCompileOptions &#123;</span><br><span class="line">            annotationProcessorOptions &#123;</span><br><span class="line">                arguments = [&quot;room.schemaLocation&quot;: &quot;$projectDir/schemas&quot;.toString()]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当执行项目后，在Android Studio 的Project视图下，查看项目，会发现Module生成了一个schemas的文件夹，如下图所示：<br><img src="https://img-blog.csdn.net/20171205224652971?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGV4aW5nZW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt></p><p>其中，会生成版本1的Json文件,这里可以查看Room数据库的配置情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;formatVersion&quot;: 1,</span><br><span class="line">  &quot;database&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: 1,</span><br><span class="line">    &quot;identityHash&quot;: &quot;8240057b6178b803a0bf9915edf969ef&quot;,</span><br><span class="line">    &quot;entities&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;tableName&quot;: &quot;movies&quot;,</span><br><span class="line">        &quot;createSql&quot;: &quot;CREATE TABLE IF NOT EXISTS `$&#123;TABLE_NAME&#125;` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `year` TEXT, `title` TEXT, `image` TEXT)&quot;,</span><br><span class="line">        &quot;fields&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;fieldPath&quot;: &quot;id&quot;,</span><br><span class="line">            &quot;columnName&quot;: &quot;id&quot;,</span><br><span class="line">            &quot;affinity&quot;: &quot;INTEGER&quot;,</span><br><span class="line">            &quot;notNull&quot;: true</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;fieldPath&quot;: &quot;year&quot;,</span><br><span class="line">            &quot;columnName&quot;: &quot;year&quot;,</span><br><span class="line">            &quot;affinity&quot;: &quot;TEXT&quot;,</span><br><span class="line">            &quot;notNull&quot;: false</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;fieldPath&quot;: &quot;title&quot;,</span><br><span class="line">            &quot;columnName&quot;: &quot;title&quot;,</span><br><span class="line">            &quot;affinity&quot;: &quot;TEXT&quot;,</span><br><span class="line">            &quot;notNull&quot;: false</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;fieldPath&quot;: &quot;image&quot;,</span><br><span class="line">            &quot;columnName&quot;: &quot;image&quot;,</span><br><span class="line">            &quot;affinity&quot;: &quot;TEXT&quot;,</span><br><span class="line">            &quot;notNull&quot;: false</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;primaryKey&quot;: &#123;</span><br><span class="line">          &quot;columnNames&quot;: [</span><br><span class="line">            &quot;id&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;autoGenerate&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;indices&quot;: [],</span><br><span class="line">        &quot;foreignKeys&quot;: []</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;setupQueries&quot;: [</span><br><span class="line">      &quot;CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)&quot;,</span><br><span class="line">      &quot;INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \&quot;8240057b6178b803a0bf9915edf969ef\&quot;)&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章：<br><a href="https://blog.csdn.net/hexingen/article/details/78725958" target="_blank" rel="noopener">https://blog.csdn.net/hexingen/article/details/78725958</a><br><a href="https://stackoverflow.com/questions/44322178/room-schema-export-directory-is-not-provided-to-the-annotation-processor-so-we" target="_blank" rel="noopener">https://stackoverflow.com/questions/44322178/room-schema-export-directory-is-not-provided-to-the-annotation-processor-so-we</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Room数据库的时候，虽然项目可以运行起来。但是，却报以下error:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Error:(22, 17) 警告: Schema export directory is not provided to the annotation processor so we cannot export the schema. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You can either provide `room.schemaLocation` annotation processor argument OR set exportSchema to false.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;As per the &lt;a href=&quot;https://developer.android.com/reference/android/arch/persistence/room/Database.html#exportSchema()&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;导出模式&lt;/strong&gt;&lt;br&gt;您可以设置注释处理器参数 (&lt;code&gt;room.schemaLocation&lt;/code&gt;) 来告诉 Room 将架构导出到文件夹中。尽管这不是强制性的，但在您的代码库中拥有版本历史记录是一个很好的做法，并且您应该将该文件提交到您的版本控制系统中（但不要将它与您的应用程序一起发布！）。&lt;/p&gt;
&lt;p&gt;设置时&lt;code&gt;room.schemaLocation&lt;/code&gt;，Room 将检查此变量，如果设置为 &lt;code&gt;true&lt;/code&gt;，则其架构将导出到给定文件夹中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exportSchema&lt;/code&gt;默认情况&lt;code&gt;true&lt;/code&gt;下，但是当您不想保留版本历史记录时，您可以为数据库禁用它（例如仅在内存中的数据库）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上，上面已经提示了开发者应该怎么处理，给出了两种方案。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://hanyechun.github.io/categories/android/"/>
    
    
      <category term="jetpack" scheme="https://hanyechun.github.io/tags/jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT评论系统Valine</title>
    <link href="https://hanyechun.github.io/2022/08/19/Hexo-NexT%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9FValine/"/>
    <id>https://hanyechun.github.io/2022/08/19/Hexo-NexT评论系统Valine/</id>
    <published>2022-08-19T06:29:26.000Z</published>
    <updated>2022-08-19T10:09:29.429Z</updated>
    
    <content type="html"><![CDATA[<h4 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h4><ol><li><p>注册LeanCloud账号，推荐使用<a href="https://leancloud.app/" target="_blank" rel="noopener">国际版</a></p></li><li><p>创建应用，在设置-&gt;应用凭证-&gt;Credentials下拿到appid、appkey</p></li><li><p>在设置-&gt;安全中心-&gt;Web安全域名下配置博客访问地址</p></li><li><p>配置hexo<br>在next主题中配置valine<br>打开 <code>_config.yml</code>, 找到 <code>Comments and Widgets</code> 开启valine</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # 设置为true，默认为false</span><br><span class="line">  appid:  # 将应用key的App ID设置在这里</span><br><span class="line">  appkey: # 将应用key的App Key设置在这里</span><br><span class="line">  notify: false# 邮箱通知 , https://github.com/xCss/Valine/wiki，默认为false</span><br><span class="line">  verify: false# 验证码 默认为false</span><br><span class="line">  placeholder: Just go go ^_^ # 初始化评论显示，根据自己修改，这里默认，</span><br><span class="line">  avatar: monsterid # 头像风格，默认为mm，可进入网址：https://valine.js.org/visitor.html查看头像设置，这里有许多头像风格，进行设置</span><br><span class="line">  guest_info: nick,mail,link # 自定义评论标题</span><br><span class="line">  pageSize: 10 # 分页大小，10页就自动分页</span><br><span class="line">  visitor: true # 是否允许游客评论 ，进入官网查看设置：https://valine.js.org/visitor.html</span><br></pre></td></tr></table></figure></li></ol><p>了解更多 Valine 配置参数信息请参考：<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine 官方文档</a></p><a id="more"></a><h4 id="valine使用中遇到的问题"><a href="#valine使用中遇到的问题" class="headerlink" title="valine使用中遇到的问题"></a>valine使用中遇到的问题</h4><ol><li><p>评论失效<br>打开控制台 发现 <a href="https://us.avoscloud.com/1.1/classes/Comment?xxxxx" target="_blank" rel="noopener">https://us.avoscloud.com/1.1/classes/Comment?xxxxx</a> 已经请求失败（net::ERR_NAME_NOT_RESOLVED）<br>解决：<br>将 Valine 指定 自定义服务器URL。在主题配置里的 Valine 的 serverURLs 填入 <a href="https://xxxxxxxx.api.lncldglobal.com" target="_blank" rel="noopener">https://xxxxxxxx.api.lncldglobal.com</a> 。自定义服务器的URL需要到 LeanCloud后台 查看。</p></li><li><p>去除 Valine的 Powered By<br>使用 <code>F12</code>，按 <code>ctrl + shift + c</code>，鼠标放到 Powered By 的地方，点击一下<br>这个 div 里的就是要修改的，打开 <code>themes/next/source/css/_custom/custom.styl</code> 文件，添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 隐藏 valine 的 powered by</span><br><span class="line">.vpower.txt-right &#123;</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加邮件提醒、qq头像自动获取<br>参考链接: <a href="https://hwame.top/20200520/hello-hexo-optimization.html" target="_blank" rel="noopener">https://hwame.top/20200520/hello-hexo-optimization.html</a></p></li><li><p>禁用特定文章的评论<br>在文章<code>markdown</code>的题头加入<code>comments: false</code>，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-07-18 14:53:52</span><br><span class="line">type:  tags</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;快速开始&quot;&gt;&lt;a href=&quot;#快速开始&quot; class=&quot;headerlink&quot; title=&quot;快速开始&quot;&gt;&lt;/a&gt;快速开始&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;注册LeanCloud账号，推荐使用&lt;a href=&quot;https://leancloud.app/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;国际版&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建应用，在设置-&amp;gt;应用凭证-&amp;gt;Credentials下拿到appid、appkey&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在设置-&amp;gt;安全中心-&amp;gt;Web安全域名下配置博客访问地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置hexo&lt;br&gt;在next主题中配置valine&lt;br&gt;打开 &lt;code&gt;_config.yml&lt;/code&gt;, 找到 &lt;code&gt;Comments and Widgets&lt;/code&gt; 开启valine&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;valine:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true # 设置为true，默认为false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  appid:  # 将应用key的App ID设置在这里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  appkey: # 将应用key的App Key设置在这里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  notify: false# 邮箱通知 , https://github.com/xCss/Valine/wiki，默认为false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  verify: false# 验证码 默认为false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  placeholder: Just go go ^_^ # 初始化评论显示，根据自己修改，这里默认，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  avatar: monsterid # 头像风格，默认为mm，可进入网址：https://valine.js.org/visitor.html查看头像设置，这里有许多头像风格，进行设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  guest_info: nick,mail,link # 自定义评论标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pageSize: 10 # 分页大小，10页就自动分页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  visitor: true # 是否允许游客评论 ，进入官网查看设置：https://valine.js.org/visitor.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;了解更多 Valine 配置参数信息请参考：&lt;a href=&quot;https://valine.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Valine 官方文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo 添加留言板</title>
    <link href="https://hanyechun.github.io/2022/08/19/Hexo-%E6%B7%BB%E5%8A%A0%E7%95%99%E8%A8%80%E6%9D%BF/"/>
    <id>https://hanyechun.github.io/2022/08/19/Hexo-添加留言板/</id>
    <published>2022-08-19T06:19:33.000Z</published>
    <updated>2022-08-19T09:13:56.154Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>添加一个新的page</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;guestbook&quot;</span><br></pre></td></tr></table></figure></li><li><p>进入 <code>source/guestbook/index.md</code>。加入你想显示的内容，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 给我留言吧</span><br><span class="line">date: 2022-02-18 20:04:25</span><br><span class="line">type: &quot;guestbook&quot;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 欢迎来到我的博客！</span><br><span class="line"></span><br><span class="line">&gt; 欢迎在这里留言！任何问题都可以在这里留言，我会及时回复的，添加email可以获得更快的回复速度，在呢称栏目输入QQ号可以直接获取你的QQ头像噢。</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="3"><li><p>进入<code>theme/next/_config.yml</code>, 找到 <code>menu</code> , 添加留言板功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  guestbook: /guestbook/ || comment</span><br></pre></td></tr></table></figure></li><li><p>更改 <code>themes/next/languages</code> 下对应语言的翻译。例如中文的<code>zh-CN.yml</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  guestbook: 留言板</span><br></pre></td></tr></table></figure></li><li><p>重新部署即可查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加一个新的page&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &amp;quot;guestbook&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入 &lt;code&gt;source/guestbook/index.md&lt;/code&gt;。加入你想显示的内容，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 给我留言吧&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2022-02-18 20:04:25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;guestbook&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 欢迎来到我的博客！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 欢迎在这里留言！任何问题都可以在这里留言，我会及时回复的，添加email可以获得更快的回复速度，在呢称栏目输入QQ号可以直接获取你的QQ头像噢。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Node切换版本、降级、升级</title>
    <link href="https://hanyechun.github.io/2022/08/19/Node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC%E3%80%81%E9%99%8D%E7%BA%A7%E3%80%81%E5%8D%87%E7%BA%A7/"/>
    <id>https://hanyechun.github.io/2022/08/19/Node切换版本、降级、升级/</id>
    <published>2022-08-19T06:01:56.000Z</published>
    <updated>2022-08-19T09:13:40.225Z</updated>
    
    <content type="html"><![CDATA[<h4 id="方案一、安装node版本管理模块n"><a href="#方案一、安装node版本管理模块n" class="headerlink" title="方案一、安装node版本管理模块n"></a>方案一、安装node版本管理模块n</h4><p>安装node管理模块n</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install n -g</span><br></pre></td></tr></table></figure><p>安装稳定版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br></pre></td></tr></table></figure><p>安装最新版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n latest</span><br></pre></td></tr></table></figure><p>版本降级/升级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n 版本号#如 sudo n 12.17.0</span><br></pre></td></tr></table></figure><a id="more"></a><p>检测目前安装的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n</span><br></pre></td></tr></table></figure><p>切换版本(不会删除其他已安装的版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n 版本号</span><br></pre></td></tr></table></figure><p>删除版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n rm 版本号</span><br></pre></td></tr></table></figure><h4 id="方案二、使用nvm"><a href="#方案二、使用nvm" class="headerlink" title="方案二、使用nvm"></a>方案二、使用nvm</h4><p>安装最新版本node</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></figure><p>安装指定版本的node</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install [node版本号]</span><br></pre></td></tr></table></figure><p>查看已安装版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></table></figure><p>切换到指定版本的node</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use [node版本号]</span><br></pre></td></tr></table></figure><p>设置默认版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm alias default [node版本号]</span><br></pre></td></tr></table></figure><p>参考文章: <a href="https://blog.csdn.net/Fabulous1111/article/details/84983869" target="_blank" rel="noopener">https://blog.csdn.net/Fabulous1111/article/details/84983869</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;方案一、安装node版本管理模块n&quot;&gt;&lt;a href=&quot;#方案一、安装node版本管理模块n&quot; class=&quot;headerlink&quot; title=&quot;方案一、安装node版本管理模块n&quot;&gt;&lt;/a&gt;方案一、安装node版本管理模块n&lt;/h4&gt;&lt;p&gt;安装node管理模块n&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo npm install n -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装稳定版&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo n stable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装最新版&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo n latest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;版本降级/升级&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo n 版本号	#如 sudo n 12.17.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
      <category term="node" scheme="https://hanyechun.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 高级应用</title>
    <link href="https://hanyechun.github.io/2022/08/18/Hexo-%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    <id>https://hanyechun.github.io/2022/08/18/Hexo-高级应用/</id>
    <published>2022-08-18T07:14:10.000Z</published>
    <updated>2022-08-19T06:30:08.559Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Hexo图片引用"><a href="#一、Hexo图片引用" class="headerlink" title="一、Hexo图片引用"></a>一、Hexo图片引用</h4><ol><li><p>本地图片<br>开启<code>_config.yml</code>中的<code>post_asset_folder: true</code> 参数，然后再你的博文生成一个同名的目录，把图片放进去，然后以如下方式引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](博文目录/图片.jpg)</span><br></pre></td></tr></table></figure><p> 若不想每次生成一个同名目录，直接在resource目录下添加一个images目录，引用如下</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/博文目录/images/图片.jpg)</span><br></pre></td></tr></table></figure></li><li><p>使用github存储图片<br>github创建一个项目，上传图片，点击图片 -&gt; download，查看路径</p></li><li><p>使用七牛云<br>点击<a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">这里</a>，查看说明</p></li></ol><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、Hexo图片引用&quot;&gt;&lt;a href=&quot;#一、Hexo图片引用&quot; class=&quot;headerlink&quot; title=&quot;一、Hexo图片引用&quot;&gt;&lt;/a&gt;一、Hexo图片引用&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;本地图片&lt;br&gt;开启&lt;code&gt;_config.yml&lt;/code&gt;中的&lt;code&gt;post_asset_folder: true&lt;/code&gt; 参数，然后再你的博文生成一个同名的目录，把图片放进去，然后以如下方式引用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![](博文目录/图片.jpg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; 若不想每次生成一个同名目录，直接在resource目录下添加一个images目录，引用如下&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![](/博文目录/images/图片.jpg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用github存储图片&lt;br&gt;github创建一个项目，上传图片，点击图片 -&amp;gt; download，查看路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用七牛云&lt;br&gt;点击&lt;a href=&quot;https://github.com/gyk001/hexo-qiniu-sync&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;，查看说明&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo 双线部署</title>
    <link href="https://hanyechun.github.io/2022/08/18/Hexo-%E5%8F%8C%E7%BA%BF%E9%83%A8%E7%BD%B2/"/>
    <id>https://hanyechun.github.io/2022/08/18/Hexo-双线部署/</id>
    <published>2022-08-18T07:10:59.000Z</published>
    <updated>2022-08-18T07:13:04.801Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、coding部署"><a href="#一、coding部署" class="headerlink" title="一、coding部署"></a>一、coding部署</h4><ul><li>到<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>注册账号</li><li>添加ssh公钥，可参考<a href="https://www.jianshu.com/p/7431fc3e5013" target="_blank" rel="noopener">这篇文章</a></li><li>创建项目、仓库名任意，配置pages服务</li></ul><h4 id="二、github部署"><a href="#二、github部署" class="headerlink" title="二、github部署"></a>二、github部署</h4><ul><li>创建仓库，仓库名必须为<code>yourname.github.io</code>，<code>yourname</code>为用户名<br>当你的仓库名为：用户名.github.io 之后默认开启Github Pages</li><li>添加ssh key</li></ul><a id="more"></a><h4 id="三、-config-yml修改"><a href="#三、-config-yml修改" class="headerlink" title="三、_config.yml修改"></a>三、_config.yml修改</h4><p>修改<code>站点配置文件</code>的<code>deploy</code>信息如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">      github: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">      coding: git@git.coding.net:yourname/yourname.git</span><br></pre></td></tr></table></figure><h4 id="四、执行部署"><a href="#四、执行部署" class="headerlink" title="四、执行部署"></a>四、执行部署</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、coding部署&quot;&gt;&lt;a href=&quot;#一、coding部署&quot; class=&quot;headerlink&quot; title=&quot;一、coding部署&quot;&gt;&lt;/a&gt;一、coding部署&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;到&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Coding&lt;/a&gt;注册账号&lt;/li&gt;
&lt;li&gt;添加ssh公钥，可参考&lt;a href=&quot;https://www.jianshu.com/p/7431fc3e5013&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这篇文章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;创建项目、仓库名任意，配置pages服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;二、github部署&quot;&gt;&lt;a href=&quot;#二、github部署&quot; class=&quot;headerlink&quot; title=&quot;二、github部署&quot;&gt;&lt;/a&gt;二、github部署&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;创建仓库，仓库名必须为&lt;code&gt;yourname.github.io&lt;/code&gt;，&lt;code&gt;yourname&lt;/code&gt;为用户名&lt;br&gt;当你的仓库名为：用户名.github.io 之后默认开启Github Pages&lt;/li&gt;
&lt;li&gt;添加ssh key&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo NexT主题</title>
    <link href="https://hanyechun.github.io/2022/08/18/Hexo-NexT%E4%B8%BB%E9%A2%98/"/>
    <id>https://hanyechun.github.io/2022/08/18/Hexo-NexT主题/</id>
    <published>2022-08-18T07:06:06.000Z</published>
    <updated>2022-08-18T07:07:37.807Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://theme-next.iissnan.com/theme-settings.html#volunteer-404" target="_blank" rel="noopener">官方文档</a></p><h4 id="一、设置文章底部版权信息"><a href="#一、设置文章底部版权信息" class="headerlink" title="一、设置文章底部版权信息"></a>一、设置文章底部版权信息</h4><p>打开主题配置文件<code>_config.yml</code>，找到<code>creative_commons</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true #设置为true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure><p><a href="http://creativecommons.org/" target="_blank" rel="noopener">Creative commons协议</a>，这个就是设置版权声明</p><a id="more"></a><h4 id="二、添加标签页"><a href="#二、添加标签页" class="headerlink" title="二、添加标签页"></a>二、添加标签页</h4><ul><li>新建页面：<br>前面通过修改next主题下的_config.yml文件中的menu选项，可以在主页面的菜单栏添加标签选项，但是此时点击标签，跳转的页面会显示page not found。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags    #新建标签页面</span><br></pre></td></tr></table></figure></li></ul><p>输入命令后，在<code>根目录/source</code>会生成一个tags文件夹，其中有个index.md文件。</p><ul><li><p>设置页面类型：<br>修改index.md，添加type：tags</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2016-11-15 19:10:05</span><br><span class="line">type:  tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>设置文章的标签：<br>当要为某篇文章添加标签时，只需在文章开头设置相应标签即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: test1    #文章标签</span><br><span class="line">date: 2017-09-20 13:29:11</span><br><span class="line">tags:         #标签</span><br><span class="line">  - test1</span><br><span class="line">  - one</span><br><span class="line">  - two</span><br><span class="line">categories: 测试     #分类</span><br><span class="line">---   </span><br><span class="line">ps：注意这是在新建文章里添加标签</span><br></pre></td></tr></table></figure></li></ul><h4 id="三、添加分类、关于页面"><a href="#三、添加分类、关于页面" class="headerlink" title="三、添加分类、关于页面"></a>三、添加分类、关于页面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories/about</span><br></pre></td></tr></table></figure><p>在<code>根目录/source</code>生成文件夹的中修改<code>index.md</code>文件中type类型分别为categories和about即可 </p><ul><li><p>文章添加分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: test1</span><br><span class="line">date: 2017-09-20 13:29:11</span><br><span class="line">tags:</span><br><span class="line">  - test1</span><br><span class="line">  - one</span><br><span class="line">  - two</span><br><span class="line">categories: 测试     #添加为测试类</span><br><span class="line">---  </span><br><span class="line">ps：注意这是在新建文章里添加分类</span><br></pre></td></tr></table></figure></li><li><p>添加关于我</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于我</span><br><span class="line">date: 2017-09-17 10:22:54  </span><br><span class="line">type: about </span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line">一只快乐的小菜鸟，欢迎分享知识。</span><br><span class="line">ps：注意这是在about文件夹里修改index.md文件</span><br></pre></td></tr></table></figure></li></ul><h4 id="四、添加公益404"><a href="#四、添加公益404" class="headerlink" title="四、添加公益404"></a>四、添加公益404</h4><p>新建 404.html 页面，放到主题的 source 目录下，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot;</span><br><span class="line">          charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot;</span><br><span class="line">          homePageName=&quot;回到我的主页&quot;&gt;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>效果如下 <a href="http://www.ixirong.com/404.html" target="_blank" rel="noopener">http://www.ixirong.com/404.html</a></p><h4 id="五、添加搜索"><a href="#五、添加搜索" class="headerlink" title="五、添加搜索"></a>五、添加搜索</h4><ul><li><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑 主题配置文件，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true    #true开启</span><br></pre></td></tr></table></figure></li></ul><h4 id="六、添加文章字数统计和阅读时长"><a href="#六、添加文章字数统计和阅读时长" class="headerlink" title="六、添加文章字数统计和阅读时长"></a>六、添加文章字数统计和阅读时长</h4><ul><li><p>根目录命令运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li><li><p>根目录配置文件<code>_config.yml</code>底部添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  #文章内是否显示</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  #网页底部是否显示</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure></li></ul><p>更多主题配置，点击<a href="https://www.lixint.me/hexo-theme-diy.html" target="_blank" rel="noopener">这里</a><br>博客搭建高级应用，点击<a href="https://blog.annieyu.com/posts/3333782006.html" target="_blank" rel="noopener">这里</a><br>官方主题文档，点击<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">这里</a><br>官方三方服务文档，点击<a href="https://theme-next.org/docs/third-party-services/comments-and-widgets" target="_blank" rel="noopener">这里</a></p><p><strong><em>多看官方文档、多看官方文档、多看官方文档</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://theme-next.iissnan.com/theme-settings.html#volunteer-404&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;一、设置文章底部版权信息&quot;&gt;&lt;a href=&quot;#一、设置文章底部版权信息&quot; class=&quot;headerlink&quot; title=&quot;一、设置文章底部版权信息&quot;&gt;&lt;/a&gt;一、设置文章底部版权信息&lt;/h4&gt;&lt;p&gt;打开主题配置文件&lt;code&gt;_config.yml&lt;/code&gt;，找到&lt;code&gt;creative_commons&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;creative_commons:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  license: by-nc-sa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sidebar: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  post: true #设置为true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  language:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative commons协议&lt;/a&gt;，这个就是设置版权声明&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>OS X 使用 Hexo 和 Coding Pages 搭建静态博客</title>
    <link href="https://hanyechun.github.io/2022/08/18/OS-X-%E4%BD%BF%E7%94%A8-Hexo-%E5%92%8C-Coding-Pages-%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hanyechun.github.io/2022/08/18/OS-X-使用-Hexo-和-Coding-Pages-搭建静态博客/</id>
    <published>2022-08-18T06:43:09.000Z</published>
    <updated>2022-08-18T07:03:09.083Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo</a>是一款基于 Node.js 的静态博客框架, 目前在 GitHub 上已有 9133 star 和 1499 fork。Hexo 生成的静态页面可以部署在 Github 或 Coding 上，并且能够免费绑定自己的域名，可以用来很方便地搭建个人博客。</p><hr><h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><p>搭建博客需要用到 git，下面这条命令可查看本机是否已安装 git，若未安装可参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496" target="_blank" rel="noopener">这篇博文</a>进行安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h4><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a>。</p><p>cURL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><p>或者您也可以下载 <a href="http://nodejs.org/" target="_blank" rel="noopener">安装程序</a> 来安装。</p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><em>以上安装配置如有问题请参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></em></p><h4 id="本地建立博客"><a href="#本地建立博客" class="headerlink" title="本地建立博客"></a>本地建立博客</h4><p>安装完成后，新建一个目录如 blog 用于存放博客，切换到该目录下执行以下指令，Hexo 即会在目标文件夹初步生成博客所需要的所有文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>然后切换到该目录下执行如下命令，安装所需要的依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install</span><br></pre></td></tr></table></figure><p>生成静态页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>启动本地服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>生成静态页面与启动本地服务可以结合成以下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g</span><br></pre></td></tr></table></figure><p>打开浏览器，输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，看到页面说明hexo环境安装成功。</p><h4 id="NexT主题配置"><a href="#NexT主题配置" class="headerlink" title="NexT主题配置"></a>NexT主题配置</h4><ul><li><p>安装<br>将它的 Git 仓库 Clone 以后放到博客目录下的 themes 文件夹中即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li><li><p>启用<br>与所有Hexo主题一样，把主题源码导入themes目录后，打开<code>根目录配置文件_config.yml</code>， 找到 theme 字段，并将其值更改为 next 就完成了主题的切换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li></ul><h4 id="部署到Coding-Pages"><a href="#部署到Coding-Pages" class="headerlink" title="部署到Coding Pages"></a>部署到Coding Pages</h4><p>在 Coding 新建一个项目，假设为 blog，然后修改本地博客目录下的 _config.yml 文件，根据<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">官方文档</a>的描述，修改以下几个参数，这些参数一般在文件底部：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git               #部署方式，这里我们用的是Coding的Git</span><br><span class="line">repo: &lt;repository url&gt;  #仓库地址，例如我的是git@git.coding.net:xxx/blog.git </span><br><span class="line">branch: [branch]        #分支名，可任意填写，我填写的是master</span><br><span class="line">message: [message]      #可不填，这是显示在提交记录里的描述信息，默认为日期</span><br></pre></td></tr></table></figure><p>参数修改完成后，我们需要在终端中切换到博客所在目录安装 deploy 组建，执行以下命令将生成的博客静态页面 push 到我们上面在 Coding 创建的 blog 仓库中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后执行依次执行清理命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>部署命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>如果在 _config.yml 的 repo 处填写的仓库地址是 https 形式的，在部署时可能需要输入你的 Coding 账号和密码。<br>然后切换到该项目的 Pages 标签，开启 pages 服务，分支名填写为我们在_config.yml 文件中设定的分支，我的是 master。</p><h4 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h4><p>pages 服务开启完成后，Coding 会提供一个类似 {user_name}.coding.me/{project_name} 的链接用于访问，例如用户名为 xxx 项目名为 blog 的链接应该是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.coding.me/blog</span><br></pre></td></tr></table></figure><p><em>若资源加载失败，主题没有显示出来，查看<code>根目录配置文件_config.yml</code></em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: http://xxx.coding.me/blog/ #项目地址</span><br><span class="line">root: /blog #项目名称</span><br></pre></td></tr></table></figure><h4 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h4><p>默认提供的链接可能过长或者不便于日常使用，我们也可以绑定自己的域名。首先，需要提前准备一个域名，然后打开自己的域名控制面板，新建一个 CNAME 解析到 {user_name}.coding.me，例如我的是将 <a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> 解析到 xxx.coding.me；  然后，打开 Coding 项目页面切换到 pages 项，填入刚才的设置解析的域名 <a href="http://www.xxx.com，点击“添加域名绑定”按钮即可，在浏览器中直接访问" target="_blank" rel="noopener">www.xxx.com，点击“添加域名绑定”按钮即可，在浏览器中直接访问</a> <a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> 就能成功打开。 有时可能由于缓存或者解析时间的问题，稍等片刻即可。</p><h4 id="撰写博客"><a href="#撰写博客" class="headerlink" title="撰写博客"></a>撰写博客</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page&quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到指定空间</span><br><span class="line">hexo help # 查看帮助</span><br><span class="line">hexo version #查看Hexo的版本</span><br></pre></td></tr></table></figure><ul><li>使用命令直接创建一篇文章<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;Hello Word&quot;</span><br></pre></td></tr></table></figure></li></ul><p>成功后我们会在source文件夹下的_posts文件夹中找到我们刚刚创建的文件Hello Word.md，编写格式为markdown, 打开文件即可直接编写</p><ul><li>手动在_posts文件夹下创建*.md文件的博客，但是我们自己要把头信息给补上。</li></ul><p><em>部署博客</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;是一款基于 Node.js 的静态博客框架, 目前在 GitHub 上已有 9133 star 和 1499 fork。Hexo 生成的静态页面可以部署在 Github 或 Coding 上，并且能够免费绑定自己的域名，可以用来很方便地搭建个人博客。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;安装-Git&quot;&gt;&lt;a href=&quot;#安装-Git&quot; class=&quot;headerlink&quot; title=&quot;安装 Git&quot;&gt;&lt;/a&gt;安装 Git&lt;/h4&gt;&lt;p&gt;搭建博客需要用到 git，下面这条命令可查看本机是否已安装 git，若未安装可参考&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这篇博文&lt;/a&gt;进行安装。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://hanyechun.github.io/categories/hexo/"/>
    
    
  </entry>
  
</feed>
